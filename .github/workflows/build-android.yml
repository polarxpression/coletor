name: EAS Build Android

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (preview, production, development)'
        required: true
        default: 'preview'
        type: choice
        options:
          - preview
          - production
          - development

jobs:
  build:
    name: Install and build
    runs-on: ubuntu-latest
    
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Determine build type
        id: build_type
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "type=${{ github.event.inputs.build_type }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/main" ] || [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "type=production" >> $GITHUB_OUTPUT
          else
            echo "type=preview" >> $GITHUB_OUTPUT
          fi

      - name: Build on EAS
        run: |
          BUILD_TYPE="${{ steps.build_type.outputs.type }}"
          echo "Building with profile: $BUILD_TYPE"
          
          if [ "$BUILD_TYPE" = "production" ]; then
            eas build --platform android --profile production --non-interactive --no-wait
          elif [ "$BUILD_TYPE" = "development" ]; then
            eas build --platform android --profile development --non-interactive --no-wait
          else
            eas build --platform android --profile preview --non-interactive --no-wait
          fi

  build-and-upload:
    name: Build and upload APK
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets."
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Build APK
        run: eas build --platform android --profile preview --non-interactive --wait

      - name: Get build URL
        id: build_url
        run: |
          BUILD_URL=$(eas build:list --platform android --limit 1 --json | jq -r '.[0].artifacts.buildUrl')
          echo "url=$BUILD_URL" >> $GITHUB_OUTPUT

      - name: Download APK
        if: steps.build_url.outputs.url != 'null'
        run: |
          curl -L -o app-release.apk "${{ steps.build_url.outputs.url }}"
          ls -la app-release.apk

      - name: Upload APK artifact
        if: steps.build_url.outputs.url != 'null'
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-${{ github.sha }}
          path: app-release.apk
          retention-days: 30

      - name: Create Release
        if: steps.build_url.outputs.url != 'null' && github.event_name == 'push'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            Automated release created from commit ${{ github.sha }}
            
            Download the APK from the artifacts or from the direct link below.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: steps.build_url.outputs.url != 'null' && github.event_name == 'push'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app-release.apk
          asset_name: coletor-v${{ github.run_number }}.apk
          asset_content_type: application/vnd.android.package-archive

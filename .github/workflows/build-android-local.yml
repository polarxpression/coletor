name: Build Android Local

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (debug, release)'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'

jobs:
  build-local:
    name: Build Android Locally
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        run: npm ci

      - name: Setup Expo CLI
        run: npm install -g @expo/cli

      - name: Generate native code
        run: npx expo prebuild --platform android --clean

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      - name: Build APK
        run: |
          cd android
          if [ "${{ github.event.inputs.build_type }}" = "release" ]; then
            ./gradlew assembleRelease
            APK_PATH="../android/app/build/outputs/apk/release/app-release.apk"
            APK_NAME="coletor-release-${{ github.sha }}.apk"
          else
            ./gradlew assembleDebug
            APK_PATH="../android/app/build/outputs/apk/debug/app-debug.apk"
            APK_NAME="coletor-debug-${{ github.sha }}.apk"
          fi
          
          # Move and rename APK
          if [ -f "app/build/outputs/apk/${{ github.event.inputs.build_type }}/app-${{ github.event.inputs.build_type }}.apk" ]; then
            mv "app/build/outputs/apk/${{ github.event.inputs.build_type }}/app-${{ github.event.inputs.build_type }}.apk" "../$APK_NAME"
            echo "apk_name=$APK_NAME" >> $GITHUB_ENV
            echo "::notice::APK built successfully: $APK_NAME"
          else
            echo "::error::APK build failed"
            exit 1
          fi

      - name: Upload APK artifact
        if: env.apk_name != ''
        uses: actions/upload-artifact@v4
        with:
          name: android-local-${{ github.event.inputs.build_type }}-${{ github.sha }}
          path: ${{ env.apk_name }}
          retention-days: 7

      - name: Build Summary
        run: |
          echo "## ðŸ“± Android Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Type:** ${{ github.event.inputs.build_type }}" >> $GITHUB_STEP_SUMMARY
          echo "- **APK Name:** ${{ env.apk_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The APK has been uploaded as an artifact and can be downloaded from the Actions tab." >> $GITHUB_STEP_SUMMARY
